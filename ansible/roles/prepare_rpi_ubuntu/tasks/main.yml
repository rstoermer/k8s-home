---
- name: Gather the system facts
  ansible.builtin.setup:

- debug: var=ansible_facts

- name: Fail if not Ubuntu
  ansible.builtin.fail:
    msg: "This playbook only supports Ubuntu."
  when: ansible_distribution != "Ubuntu"
  
- name: Enable cgroup via boot commandline if not already enabled
  ansible.builtin.lineinfile:
    path: /boot/firmware/cmdline.txt
    backrefs: true
    regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
    line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
  notify: Reboot

- name: Install Ubuntu Raspi Extra Packages
  ansible.builtin.apt:
    # Fixes issues in newer Ubuntu where VXLan isn't setup right.
    # See: https://github.com/k3s-io/k3s/issues/4234
    name: linux-modules-extra-raspi
    update_cache: true
    state: present
  when: "ansible_distribution_version is version('20.10', '>=')"

- name: Enable IPv4 forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: true

- name: Enable IPv6 forwarding
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: true
  when: ansible_all_ipv6_addresses

# Enable UFW
- name: Get ufw status
  ansible.builtin.command:
    cmd: ufw status
  changed_when: false
  register: ufw_status

- name: Allow UFW Exceptions
  when: '"inactive" in ufw_status.stdout'
  block:
    - name: Open K8s API Port
      community.general.ufw:
        rule: allow
        port: "{{ api_port }}"
        proto: tcp

    - name: Open ports for default CIDRs used
      community.general.ufw:
        rule: allow
        src: '{{ item }}'
      loop: "{{ (cluster_cidr + ',' + service_cidr) | split(',') }}"

    - name: Allow SSH connections through firewall
      ansible.builtin.ufw:
        rule: allow
        name: OpenSSH

    - name: Enable UFW
      ansible.builtin.ufw:
        state: enabled
        policy: deny
        logging: on
